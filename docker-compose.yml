version: "3"

services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root123
    ports:
      - "27017:27017"
    volumes:
      - /data/db:/data/db
    networks:
      - mongo-compose-network

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: luis
      ME_CONFIG_BASICAUTH_PASSWORD: l123
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root123
    links:
      - mongo
    networks:
      - mongo-compose-network
    depends_on: [mongo]

  # nodejs:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: nodejs
  #   container_name: nodejs
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - MONGO_USERNAME=$MONGO_USERNAME
  #     - MONGO_PASSWORD=$MONGO_PASSWORD
  #     - MONGO_HOSTNAME=db
  #     - MONGO_PORT=$MONGO_PORT
  #     - MONGO_DB=$MONGO_DBdocker
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - .:/home/node/app
  #     - node_modules:/home/node/app/node_modules
  #   networks:
  #     - mongo-compose-network
  #   depends_on: [mongo-express, mongo]
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "localhost:27017"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

networks:
  mongo-compose-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
